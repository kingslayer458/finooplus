apiVersion: v1
kind: Service
metadata:
  name: sample-web-app-service
  labels:
    app: sample-web-app
spec:
  # Service type - can be ClusterIP, NodePort, or LoadBalancer
  type: LoadBalancer
  
  # Selector to match pods
  selector:
    app: sample-web-app
  
  # Ports configuration
  ports:
  - name: http
    protocol: TCP
    port: 80          # Service port (external)
    targetPort: 3000  # Container port (internal)
    # nodePort: 30080 # Uncomment if using NodePort type
  
  # Session affinity (optional)
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
apiVersion: v1
kind: Service
metadata:
  name: sample-web-app-nodeport
  labels:
    app: sample-web-app
spec:
  # NodePort service for direct access
  type: NodePort
  
  selector:
    app: sample-web-app
  
  ports:
  - name: http
    protocol: TCP
    port: 3000
    targetPort: 3000
    nodePort: 30080  # Accessible on <NodeIP>:30080
